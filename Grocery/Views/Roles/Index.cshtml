@model IEnumerable<Grocery.Models.Role>

<div class="container-fluid">
    <h2>Управление ролями</h2>

    <div class="table-responsive mb-4" style="height: 50vh; overflow-y: auto;">
        <table class="table table-striped table-bordered">
            <thead class="thead-light" style="position: sticky; top: 0; z-index: 1; background-color: #add8e6; ">
                <tr>
                    <th>ID</th>
                    <th>Название роли</th>
                    <th>Картинка</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr class="role-row" data-id="@item.RoleId" data-name="@item.RoleName" data-image="@item.ImagePath">
                            <td>@item.RoleId</td>
                            <td>@item.RoleName</td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.ImagePath))
                                {
                                    <img src="@Url.Content(item.ImagePath)" alt="@item.RoleName" style="max-width: 50px; max-height: 50px;" />
                                }
                                else
                                {
                                    <span>Нет картинки</span>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="3" class="text-center">Ролей не найдено</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="operations-container">
        <div class="operation-group mb-4">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.TextBox("RoleId", null, new { @class = "form-control", id = "editRoleId", placeholder = "ID роли", required = "required", style = "width: 80px;" })
                    @Html.TextBox("RoleName", null, new { @class = "form-control ml-2", id = "editRoleName", placeholder = "Новое название", required = "required" })
                    @Html.TextBox("ImagePath", null, new { @class = "form-control ml-2", id = "editImagePath", placeholder = "Путь к картинке" })
                    <button type="button" class="btn btn-primary ml-2" id="editButton">Изменить</button>
                </div>
                @Html.ValidationMessage("RoleName", "", new { @class = "text-danger" })
            }
        </div>

        <div class="operation-group mb-4">
            @using (Html.BeginForm("Create", "Roles", FormMethod.Post, new { @class = "form-inline" }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.TextBox("RoleName", null, new { @class = "form-control", placeholder = "Название новой роли", required = "required" })
                    <input type="text" class="form-control ml-2" name="ImagePath" placeholder="Путь к картинке">
                    <button type="submit" class="btn btn-success ml-2">Добавить</button>
                </div>
                @Html.ValidationMessage("RoleName", "", new { @class = "text-danger" })
            }
        </div>

        <div class="operation-group">
            <div class="d-flex align-items-center">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline mr-3", id = "deleteForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="d-flex align-items-center">
                        @Html.TextBox("id", null, new { @class = "form-control", id = "deleteRoleId", placeholder = "ID роли", required = "required", style = "width: 80px;" })
                        <button type="button" class="btn btn-danger ml-2" id="deleteButton">Удалить</button>
                    </div>
                }

                @using (Html.BeginForm("Index", "Roles", FormMethod.Get, new { @class = "form-inline" }))
                {
                    <div class="d-flex align-items-center ml-3">
                        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Поиск по названию" })
                        <button type="submit" class="btn btn-secondary ml-2">Найти</button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary ml-2">Сбросить</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('.role-row').click(function () {
                $('.role-row').removeClass('table-active');
                $(this).addClass('table-active');

                var id = $(this).data('id');
                var name = $(this).data('name');
                var image = $(this).data('image');

                $('#editRoleId').val(id);
                $('#editRoleName').val(name).focus();
                $('#editImagePath').val(image);
                $('#deleteRoleId').val(id);
            });

            $('#editButton').click(function () {
                var roleId = $('#editRoleId').val();
                var roleName = $('#editRoleName').val();
                var imagePath = $('#editImagePath').val();

                if (isNaN(roleId) || roleId === '' || roleName === '') {
                    return;
                }

                $.ajax({
                    url: '/Roles/Edit/' + roleId,
                    type: 'POST',
                    data: {
                        RoleId: roleId,
                        RoleName: roleName,
                        ImagePath: imagePath,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            var rowToUpdate = $('.role-row[data-id="' + roleId + '"]');
                            if (rowToUpdate.length > 0) {
                                rowToUpdate.find('td:nth-child(2)').text(roleName);
                                var imageCell = rowToUpdate.find('td:nth-child(3)');
                                if (imagePath) {
                                    imageCell.html('<img src="' + '@Url.Content("' + imagePath + '")' + '" alt="' + roleName + '" style="max-width: 50px; max-height: 50px;" />');
                                } else {
                                    imageCell.html('<span>Нет картинки</span>');
                                }
                                rowToUpdate.data('name', roleName);
                                rowToUpdate.data('image', imagePath);
                            }
                            $('#editRoleId').val('');
                            $('#editRoleName').val('');
                            $('#editImagePath').val('');
                        } else {
                            alert(result.message || 'Не удалось обновить роль.');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Произошла ошибка при обновлении роли: ' + error);
                    }
                });
            });

            $('form[action*="Create"]').submit(function () {
                if ($(this).valid()) {
                    setTimeout(() => {
                        $(this).find('input[type="text"]').val('');
                    }, 100);
                }
            });

            $('#deleteButton').click(function (event) {
                event.preventDefault();
                var roleId = $('#deleteRoleId').val();

                if (isNaN(roleId) || roleId === '') {
                    $('#deleteRoleId').val('');
                    alert('Пожалуйста, введите корректный ID роли.');
                    return;
                }

                $.ajax({
                    url: '/Roles/Delete/' + roleId,
                    type: 'POST',
                    data: {
                        id: roleId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            $('.role-row[data-id="' + roleId + '"]').remove();
                            $('#deleteRoleId').val('');
                        } else {
                            $('#deleteRoleId').val('');
                            alert(result.message || 'Не удалось удалить роль.');
                        }
                    },
                    error: function (xhr, status, error) {
                        $('#deleteRoleId').val('');
                        if (xhr.status === 404) {
                            alert('Роль с указанным ID не найдена.');
                        } else {
                            alert('Произошла ошибка при удалении роли: ' + error);
                        }
                    }
                });
            });
        });
    </script>
}

<style>
    .role-row {
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .role-row:hover {
            background-color: rgba(0, 0, 0, 0.075);
        }

    .table-active {
        background-color: #e7f5ff !important;
    }

    /* Фиксированная шапка таблицы при прокрутке */
    .table-responsive {
        border: 1px solid #dee2e6;
    }

    .operations-container {
        margin-top: 20px;
    }

    .operation-group {
        margin-bottom: 15px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 4px;
    }

    .ml-2 {
        margin-left: 0.5rem !important;
    }

    .mr-3 {
        margin-right: 1rem !important;
    }

    .form-control {
        min-width: 200px;
    }
</style>