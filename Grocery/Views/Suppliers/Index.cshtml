@model IEnumerable<Grocery.Models.Supplier>
@{
    ViewBag.Title = "Управление поставщиками";
}

<div class="container-fluid">
    <h2>Управление поставщиками</h2>

    <div class="table-responsive mb-4" style="height: 50vh; overflow-y: auto;">
        <table class="table table-striped table-bordered">
            <thead class="thead-light" style="position: sticky; top: 0; z-index: 1; background-color: #e0f2f7;">
                <tr>
                    <th>ID</th>
                    <th>
                        <span style="text-decoration: none; color: inherit; display: flex; align-items: center;">
                            @Html.ActionLink("Название", "Index", new { sortOrder = ViewBag.NameSortParm, searchString = ViewBag.CurrentFilter }, new { style = "text-decoration: none; color: inherit;" })
                            @if (ViewBag.NameSortParm == "name_desc")
                            {
                                <i class="fas fa-sort-down ml-1"></i>
                            }
                            else if (!String.IsNullOrEmpty(ViewBag.NameSortParm))
                            {
                                <i class="fas fa-sort-up ml-1"></i>
                            }
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter ml-2" viewBox="0 0 16 16">
                                <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
                            </svg>
                        </span>
                    </th>
                    <th>Адрес</th>
                    <th>Телефон</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="supplier-row" data-id="@item.SupplierId"
                        data-name="@item.Name"
                        data-address="@item.Address"
                        data-phone="@item.PhoneNumber"
                        data-email="@item.Email">
                        <td>@item.SupplierId</td>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.PhoneNumber</td>
                        <td>@item.Email</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Остальной код остается без изменений -->
    <div class="operations-container">
        <div class="operation-group mb-4">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.TextBox("SupplierId", null, new { @class = "form-control", id = "editSupplierId", placeholder = "ID", required = "required", style = "width: 50px;" })
                    @Html.TextBox("Name", null, new { @class = "form-control ml-2", id = "editName", placeholder = "Название", required = "required", style = "width: 200px;" })
                    @Html.TextBox("Address", null, new { @class = "form-control ml-2", id = "editAddress", placeholder = "Адрес", style = "width: 200px;" })
                    @Html.TextBox("PhoneNumber", null, new { @class = "form-control ml-2", id = "editPhone", placeholder = "Телефон", style = "width: 150px;" })
                    @Html.TextBox("Email", null, new { @class = "form-control ml-2", id = "editEmail", placeholder = "Email", style = "width: 200px;" })
                    <button type="submit" class="btn btn-primary ml-2" id="editButton">Изменить</button>
                </div>
                @Html.ValidationMessage("Name", "", new { @class = "text-danger" })
            }
        </div>

        <div class="operation-group mb-4">
            @using (Html.BeginForm("Create", "Suppliers", FormMethod.Post, new
            {
                @class = "form-inline",
                id = "createForm",
                novalidate = "novalidate" // Отключаем стандартную валидацию
            }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.TextBox("Name", null, new
                    {
                        @class = "form-control",
                        placeholder = "Название",
                        style = "width: 200px;"
                    })
                    @Html.TextBox("Address", null, new
                    {
                        @class = "form-control ml-2",
                        placeholder = "Адрес",
                        style = "width: 200px;"
                    })
                    @Html.TextBox("PhoneNumber", null, new
                    {
                        @class = "form-control ml-2",
                        placeholder = "Телефон",
                        style = "width: 150px;"
                    })
                    @Html.TextBox("Email", null, new
                    {
                        @class = "form-control ml-2",
                        placeholder = "Email",
                        style = "width: 200px;"
                    })
                    <button type="submit" class="btn btn-success ml-2">Добавить</button>
                </div>
            }
        </div>

        <div class="operation-group">
            <div class="d-flex align-items-center">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline mr-3", id = "deleteForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="d-flex align-items-center">
                        @Html.TextBox("id", null, new { @class = "form-control", id = "deleteSupplierId", placeholder = "ID", required = "required", style = "width: 50px;" })
                        <button type="submit" class="btn btn-danger ml-2" id="deleteButton">Удалить</button>
                    </div>
                }

                @using (Html.BeginForm("Index", "Suppliers", FormMethod.Get, new { @class = "form-inline" }))
                {
                    <div class="d-flex align-items-center ml-3">
                        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Поиск по названию", style = "width: 200px;" })
                        <button type="submit" class="btn btn-secondary ml-2">Найти</button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary ml-2">Сбросить</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Функция для привязки событий к строке
            function bindRowEvents(row) {
                row.off('click').on('click', function () {
                    $('.supplier-row').removeClass('table-active');
                    $(this).addClass('table-active');

                    var id = $(this).data('id');
                    var name = $(this).data('name');
                    var address = $(this).data('address');
                    var phone = $(this).data('phone');
                    var email = $(this).data('email');

                    $('#editSupplierId').val(id);
                    $('#editName').val(name);
                    $('#editAddress').val(address);
                    $('#editPhone').val(phone);
                    $('#editEmail').val(email);
                    $('#deleteSupplierId').val(id);
                });
            }

            // Инициализация событий для существующих строк
            $('.supplier-row').each(function () {
                bindRowEvents($(this));
            });

            // Обработка формы добавления
            $('#createForm').submit(function (e) {
                e.preventDefault();

                var form = $(this);
                var name = form.find('input[name="Name"]').val().trim();
                if (!name) return false;

                $.ajax({
                    url: '/Suppliers/Create',
                    type: 'POST',
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            form[0].reset();

                            // Создаем новую строку таблицы
                            var newRow = $('<tr>')
                                .addClass('supplier-row')
                                .attr('data-id', result.id)
                                .attr('data-name', result.name)
                                .attr('data-address', result.address)
                                .attr('data-phone', result.phone)
                                .attr('data-email', result.email)
                                .append(
                                    $('<td>').text(result.id),
                                    $('<td>').text(result.name),
                                    $('<td>').text(result.address),
                                    $('<td>').text(result.phone),
                                    $('<td>').text(result.email)
                                );

                            $('tbody').prepend(newRow);
                            bindRowEvents(newRow);
                        } else {
                            if (result.message) {
                                alert(result.message);
                            }
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });

            // Обработка формы редактирования
            $('#editForm').submit(function (e) {
                e.preventDefault();

                var form = $(this);
                var supplierId = $('#editSupplierId').val();
                if (!supplierId || isNaN(supplierId)) return;

                $.ajax({
                    url: '/Suppliers/Edit/' + supplierId,
                    type: 'POST',
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            // Находим строку и обновляем ее данные
                            var row = $('.supplier-row[data-id="' + result.id + '"]');

                            row.attr('data-name', result.name)
                                .attr('data-address', result.address)
                                .attr('data-phone', result.phone)
                                .attr('data-email', result.email);

                            row.find('td:eq(0)').text(result.id);
                            row.find('td:eq(1)').text(result.name);
                            row.find('td:eq(2)').text(result.address);
                            row.find('td:eq(3)').text(result.phone);
                            row.find('td:eq(4)').text(result.email);

                            bindRowEvents(row);
                        } else {
                            if (result.message) {
                                alert(result.message);
                            }
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });

            // Обработка формы удаления
            $('#deleteForm').submit(function (e) {
                e.preventDefault();

                var supplierId = $('#deleteSupplierId').val();
                if (!supplierId || isNaN(supplierId)) return;

                $.ajax({
                    url: '/Suppliers/Delete/' + supplierId,
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('.supplier-row[data-id="' + supplierId + '"]').remove();
                            $('#deleteSupplierId').val('');
                        } else {
                            if (result.message) {
                                alert(result.message);
                            }
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });
        });
        </script>

    <style>
        .supplier-row {
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .supplier-row:hover {
                background-color: rgba(0, 0, 0, 0.075);
            }

        .table-active {
            background-color: #e0f7fa !important;
        }

        .table-responsive {
            border: 1px solid #dee2e6;
        }

        .operations-container {
            margin-top: 20px;
        }

        .operation-group {
            margin-bottom: 15px;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }

        .ml-1 {
            margin-left: 0.25rem !important;
        }

        .ml-2 {
            margin-left: 0.5rem !important;
        }

        .mr-3 {
            margin-right: 1rem !important;
        }
    </style>
}