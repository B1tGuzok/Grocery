@model IEnumerable<Grocery.Models.PositionsInOrder>
@{
    ViewBag.Title = "Управление позициями в заказах";
}

<div class="container-fluid">
    <h2>Управление позициями в заказах</h2>

    <div class="table-responsive mb-4" style="height: 50vh; overflow-y: auto;">
        <table class="table table-striped table-bordered">
            <thead class="thead-light" style="position: sticky; top: 0; z-index: 1; background-color: #e0f2f7;">
                <tr>
                    <th>ID позиции</th>
                    <th>ID заказа</th>
                    <th>Товар</th>
                    <th>
                        <span style="text-decoration: none; color: inherit; display: flex; align-items: center;">
                            @Html.ActionLink("Количество", "Index", new { sortOrder = ViewBag.QuantitySortParm, searchString = ViewBag.CurrentFilter }, new { style = "text-decoration: none; color: inherit;" })
                            @if (ViewBag.QuantitySortParm == "quantity_desc")
                            {
                                <i class="fas fa-sort-down ml-1"></i>
                            }
                            else if (ViewBag.QuantitySortParm == "Quantity")
                            {
                                <i class="fas fa-sort-up ml-1"></i>
                            }
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter ml-1" viewBox="0 0 16 16">
                                <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
                            </svg>
                        </span>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="position-row"
                        data-id="@item.PositionId"
                        data-orderid="@item.OrderId"
                        data-productid="@item.ProductId"
                        data-quantity="@item.Quantity">
                        <!-- Добавляем data-quantity -->
                        <td>@item.PositionId</td>
                        <td>@item.Order.OrderId</td>
                        <td>@item.Product.ProductName</td>
                        <td>@(item.Quantity.HasValue ? item.Quantity.Value.ToString() : "-")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="operations-container">
        <div class="operation-group mb-4">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.TextBox("PositionId", null, new { @class = "form-control", id = "editPositionId", placeholder = "ID позиции", style = "width: 100px;" })
                    @Html.DropDownList("OrderId", null, "Выберите заказ", new { @class = "form-control ml-2", id = "editOrderId", style = "width: 150px;" })
                    @Html.DropDownList("ProductId", null, "Выберите товар", new { @class = "form-control ml-2", id = "editProductId", style = "width: 200px;" })
                    @Html.TextBox("Quantity", null, new { @class = "form-control ml-2", id = "editQuantity", placeholder = "Количество", style = "width: 100px;", type = "number" })
                    <button type="submit" class="btn btn-primary ml-2" id="editButton">Изменить</button>
                </div>
            }
        </div>

        <div class="operation-group mb-4">
            @using (Html.BeginForm("Create", "PositionsInOrders", FormMethod.Post, new { @class = "form-inline", id = "createForm", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                <div class="d-flex align-items-center">
                    @Html.DropDownList("OrderId", null, "Выберите заказ", new { @class = "form-control", id = "createOrderId", style = "width: 150px;" })
                    @Html.DropDownList("ProductId", null, "Выберите товар", new { @class = "form-control ml-2", id = "createProductId", style = "width: 200px;" })
                    @Html.TextBox("Quantity", null, new { @class = "form-control ml-2", id = "createQuantity", placeholder = "Количество", style = "width: 100px;", type = "number" })
                    <button type="submit" class="btn btn-success ml-2">Добавить</button>
                </div>
            }
        </div>

        <div class="operation-group">
            <div class="d-flex align-items-center">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline mr-3", id = "deleteForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="d-flex align-items-center">
                        @Html.TextBox("id", null, new { @class = "form-control", id = "deletePositionId", placeholder = "ID позиции", style = "width: 100px;" })
                        <button type="submit" class="btn btn-danger ml-2" id="deleteButton">Удалить</button>
                    </div>
                }

                @using (Html.BeginForm("Index", "PositionsInOrders", FormMethod.Get, new { @class = "form-inline" }))
                {
                    <div class="d-flex align-items-center ml-3">
                        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Поиск по ID заказа", style = "width: 200px;" })
                        <button type="submit" class="btn btn-secondary ml-2">Найти</button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary ml-2">Сбросить</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Функция для привязки событий к строке
            function bindRowEvents(row) {
                row.off('click').on('click', function () {
                    $('.position-row').removeClass('table-active');
                    $(this).addClass('table-active');

                    var id = $(this).data('id');
                    var orderId = $(this).data('orderid');
                    var productId = $(this).data('productid');
                    var quantity = $(this).data('quantity');

                    $('#editPositionId').val(id);
                    $('#editOrderId').val(orderId);
                    $('#editProductId').val(productId);
                    $('#editQuantity').val(quantity);
                    $('#deletePositionId').val(id);
                });
            }

            // Инициализация событий
            $('.position-row').each(function () {
                bindRowEvents($(this));
            });

            // Обработка формы добавления
            $('#createForm').submit(function (e) {
                e.preventDefault();

                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            form[0].reset();

                            // Создаем новую строку
                            var newRow = $('<tr>')
                                .addClass('position-row')
                                .attr('data-id', result.positionId)
                                .attr('data-orderid', result.orderId)
                                .attr('data-productid', result.productId)
                                .attr('data-quantity', result.quantity)
                                .append(
                                    $('<td>').text(result.positionId),
                                    $('<td>').text(result.orderId),
                                    $('<td>').text(result.productName),
                                    $('<td>').text(result.quantity || '-')
                                );

                            $('tbody').prepend(newRow);
                            bindRowEvents(newRow);
                        } else {
                            alert(result.message || 'Ошибка при добавлении');
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });

            // Обработка формы редактирования
            $('#editForm').submit(function (e) {
                e.preventDefault();

                var form = $(this);
                var positionId = $('#editPositionId').val();
                if (!positionId) return;

                $.ajax({
                    url: '/PositionsInOrders/Edit/' + positionId,
                    type: 'POST',
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            // Обновляем существующую строку
                            var row = $('.position-row[data-id="' + result.positionId + '"]');
                            row.attr('data-orderid', result.orderId)
                                .attr('data-productid', result.productId)
                                .attr('data-quantity', result.quantity);

                            row.find('td:eq(0)').text(result.positionId);
                            row.find('td:eq(1)').text(result.orderId);
                            row.find('td:eq(2)').text(result.productName);
                            row.find('td:eq(3)').text(result.quantity || '-');

                            bindRowEvents(row);
                        } else {
                            alert(result.message || 'Ошибка при редактировании');
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });

            // Обработка формы удаления
            $('#deleteForm').submit(function (e) {
                e.preventDefault();

                var positionId = $('#deletePositionId').val();
                if (!positionId) return;

                $.ajax({
                    url: '/PositionsInOrders/Delete/' + positionId,
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('.position-row[data-id="' + positionId + '"]').remove();
                            $('#deletePositionId').val('');
                        } else {
                            alert(result.message || 'Ошибка при удалении');
                        }
                    },
                    error: function (xhr) {
                        alert('Ошибка сервера: ' + xhr.statusText);
                    }
                });
            });
        });
    </script>
}

<style>
    .position-row {
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .position-row:hover {
            background-color: rgba(0, 0, 0, 0.075);
        }

    .table-active {
        background-color: #e0f7fa !important;
    }

    .table-responsive {
        border: 1px solid #dee2e6;
    }

    .operations-container {
        margin-top: 20px;
    }

    .operation-group {
        margin-bottom: 15px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 4px;
    }

    .ml-1 {
        margin-left: 0.25rem !important;
    }

    .ml-2 {
        margin-left: 0.5rem !important;
    }

    .mr-3 {
        margin-right: 1rem !important;
    }
</style>
}